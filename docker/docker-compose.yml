version: '3.9'

services:
  # Nginx Reverse Proxy - Single entry point
  nginx:
    image: nginx:alpine
    container_name: lit-intel-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - dashboard
      - ocr-api
      - graph-api
      - anything-llm
    networks:
      - lit-intel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for job queuing and caching
  redis:
    image: redis:7-alpine
    container_name: lit-intel-redis
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - lit-intel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for Anything-LLM and metadata
  postgres:
    image: postgres:15-alpine
    container_name: lit-intel-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-litintel}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}      POSTGRES_DB: ${POSTGRES_DB:-litintel}
      POSTGRES_MULTIPLE_DATABASES: anythingllm,metadata,audit
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - lit-intel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-litintel}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # DuckDB Graph API Service
  graph-api:
    build:
      context: ./graph-api
      dockerfile: Dockerfile
    container_name: lit-intel-graph-api
    environment:
      DUCKDB_PATH: /data/graph/financial.duckdb
      API_KEY: ${GRAPH_API_KEY:-change_me_in_production}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - /data/ocr:/data/ocr:ro
      - duckdb-data:/data/graph
    networks:
      - lit-intel-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
  # OCR Ensemble Service with Confidence Weighting
  ocr-api:
    build:
      context: ./ocr-service
      dockerfile: Dockerfile
    container_name: lit-intel-ocr-api
    environment:
      CUDA_VISIBLE_DEVICES: 0
      REDIS_URL: redis://redis:6379
      POSTGRES_URL: postgresql://${POSTGRES_USER:-litintel}:${POSTGRES_PASSWORD:-secure_password_change_me}@postgres:5432/metadata
      OCR_BATCH_SIZE: ${OCR_BATCH_SIZE:-50}
      MAX_WORKERS: ${MAX_WORKERS:-4}
      USE_GPU: "true"
    volumes:
      - /data/ocr:/data/ocr
      - ocr-cache:/app/cache
    networks:
      - lit-intel-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    runtime: nvidia
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  # Anything-LLM Service
  anything-llm:
    image: mintplexlabs/anythingllm:latest
    container_name: lit-intel-anything-llm
    environment:
      SERVER_PORT: 3001
      STORAGE_DIR: /app/server/storage
      VECTOR_DB: postgres
      POSTGRES_CONNECTION_STRING: postgresql://${POSTGRES_USER:-litintel}:${POSTGRES_PASSWORD:-secure_password_change_me}@postgres:5432/anythingllm
      DISABLE_TELEMETRY: "true"
      JWT_SECRET: ${JWT_SECRET:-change_me_in_production}
    volumes:
      - anything-llm-data:/app/server/storage
      - /data/ocr:/data/ocr:ro
    networks:
      - lit-intel-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 6G

  # Unified Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: lit-intel-dashboard
    environment:
      REACT_APP_API_BASE_URL: /api
      REACT_APP_WS_URL: ws://localhost/ws
    networks:
      - lit-intel-network    restart: unless-stopped
    depends_on:
      - graph-api
      - ocr-api
      - anything-llm
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

networks:
  lit-intel-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  redis-data:
  postgres-data:
  duckdb-data:
  ocr-cache:
  anything-llm-data:
  prometheus-data:
  grafana-data: